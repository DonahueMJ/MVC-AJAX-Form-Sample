@model PageScraper.ViewModels.ScrapedResults
@{
    int imageCounter = 0;
}
<section class="jumbotron text-center">
    <div class="container">
        <h2>Page Statistics</h2>
    </div>
</section>
<section>
    <div class="container">
        <div class="row" id="results">
            <div class="col-md-4">
                <h3>Total Page Words: @Model.WordCount</h3>
                <ul>
                    <li>
                        Top @Constants.GeneralSettings.TopWordResultQty Words:
                        <ul>
                            @foreach (var word in Model.WordStats)
                            {
                                <li><strong>@word.Name</strong> appeared @word.Count times</li>

                            }
                        </ul>

                    </li>
                </ul>

            </div>
            <div class="col-md-6">
                <h3>Word chart:</h3>
                <canvas id="myChart"></canvas>

            </div>
        </div>
    </div>
</section>
<section class="jumbotron text-center bg-light">

    <h2>Scraped images</h2>

                <!-- Galley wrapper that contains all items -->
                <div id="gallery" class="my-gallery" itemscope itemtype="http://schema.org/ImageGallery">
                    <div class="row">
                        @foreach (var image in Model.Images)
                        {
                            if (imageCounter != 0 && imageCounter % 3 == 0)
                            {
                            @:</div>
                            @:<div class="row">
                            }


                            <div class="col-md-4">
                                <div class="card mb-4 shadow-sm">
                                    <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject" data-index="@imageCounter">
                                        <!-- Link to the big image, not mandatory, but usefull when there is no JS -->
                                        <a href="@image.Url" data-caption="@image.Title" data-width="@image.width" data-height="@image.height" itemprop="contentUrl">
                                            <!-- Thumbnail -->
                                            <img src="@image.Url" itemprop="thumbnail" alt="@image.Title" class="img-fluid align-middle">
                                        </a>
                                    </figure>
                                </div>
                            </div>
                            imageCounter++;
                        }

                    </div>
                </div>

    <div class="spacer"></div>

</section>


<script>
    var ctx = document.getElementById("myChart");
    var myChart = new Chart(ctx, {
        type: 'horizontalBar',
        data: {
            labels: ["@Model.WordStats[0].Name", "@Model.WordStats[1].Name", "@Model.WordStats[2].Name", "@Model.WordStats[3].Name", "@Model.WordStats[4].Name", "@Model.WordStats[5].Name", "@Model.WordStats[6].Name", "@Model.WordStats[7].Name", "@Model.WordStats[8].Name", "@Model.WordStats[9].Name"],
            datasets: [{
                label: '# of Words',
                data: [@Model.WordStats[0].Count, @Model.WordStats[1].Count, @Model.WordStats[2].Count, @Model.WordStats[3].Count, @Model.WordStats[4].Count, @Model.WordStats[5].Count, @Model.WordStats[6].Count, @Model.WordStats[7].Count, @Model.WordStats[8].Count, @Model.WordStats[9].Count],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(101, 14, 14, 0.2)',
                    'rgba(57, 160, 74, 0.2)',
                    'rgba(240, 167, 25, 0.2)',
                    'rgba(25, 46, 94, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(29, 3, 3, 1)',
                    'rgba(57, 160, 74, 1)',
                    'rgba(240, 167, 25, 1)',
                    'rgba(1, 4, 30, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }],
                xAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            },
            barThickness: 1
        }
    });
</script>


